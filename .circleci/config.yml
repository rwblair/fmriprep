version: 2
machine:
jobs:
  build:
    docker:
      - image: ubuntu:xenial-20161213
        environment:
          OSF_PROJECT: https://files.osf.io/v1/resources/fvuh8/providers/osfstorage
          DS005_URL: /57f32a429ad5a101f977eb75
          DS005_FS_URL: /58fe59eb594d900250960180
          DS054_URL: /57f32c22594d9001ef91bf9e

    steps:
      - checkout
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: install pre reqs
          command: |
            apt-get update && apt-get -y install python3 python3-dev cython build essential
      - restore_cache:
          keys:
            - fmriprep-data
      - run:
          name: pre
          command: |
            mkdir -p $HOME/data
            mkdir -p $HOME/ds005/out/
            mkdir -p $HOME/ds054
            mkdir -p $HOME/docs
            # Download test data
            if [[ ! -d $HOME/data/ds005 ]]; then wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q -O ds005_downsampled.tar.gz $OSF_PROJECT$DS005_URL && tar xzf ds005_downsampled.tar.gz -C $HOME/data/; fi
            if [[ ! -d $HOME/data/ds054 ]]; then wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q -O ds054_downsampled.tar.gz $OSF_PROJECT$DS054_URL && tar xzf ds054_downsampled.tar.gz -C $HOME/data/; fi
            if [[ ! -d $HOME/data/freesurfer ]]; then wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q -O ds005_derivatives_freesurfer.tar.gz $OSF_PROJECT$DS005_FS_URL && tar xzf ds005_derivatives_freesurfer.tar.gz -C $HOME/data/; fi
            cp -al $HOME/data/freesurfer $HOME/ds005/out/freesurfer
            printf "[execution]\nstop_on_first_crash = true\nremove_unnecessary_outputs = false" > $HOME/nipype.cfg
            # Setup dependencies
            pip3 install future numpy
            # Verify we can run setup.py
            python3 setup.py --help
            python3 wrapper/setup.py --help
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build docker image
          command: |
            docker build --cache-from=app -t app .
            sed -i -E "s/(__version__ = )'[A-Za-z0-9.-]+'/\1'$CIRCLE_TAG'/" fmriprep/info.py
            sed -i -E "s/(__version__ = )'[A-Za-z0-9.-]+'/\1'$CIRCLE_TAG'/" wrapper/fmriprep_docker.py
            docker pull poldracklab/fmriprep:latest || true
            e=1 && for i in {1..5}; do docker build --cache-from=app --rm=false -t poldracklab/fmriprep:latest --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=`git rev-parse --short HEAD` --build-arg VERSION=${CIRCLE_TAG:-latest} . && e=0 && break || sleep 15; done && [ "$e" -eq "0" ]
            pip install --upgrade wrapper/
          timeout: 21600
      - run:
          name: Save docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }} 
          paths:
            - /caches/app.tar
      - run:
          name: Run tests
          command:
            bash .circle/tests.sh
